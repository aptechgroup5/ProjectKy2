addEvent(window,'load',initForm);var highlight_array=new Array();function initForm(){    initializeFocus();    initAutoResize();    ifInstructs();    browserDetect();    listDetect();    checkmenu();}function initializeFocus(){    fields=getElementsByClassName(document,"*","field");    for(i=0;i<fields.length;i++){        if(fields[i].type=='radio'||fields[i].type=='checkbox'||fields[i].type=='file'){            fields[i].onclick=function(){                clearSafariRadios();                addClassName(this.parentNode.parentNode,"focused",true)            };            fields[i].onfocus=function(){                clearSafariRadios();                addClassName(this.parentNode.parentNode,"focused",true)            };            highlight_array.splice(highlight_array.length,0,fields[i]);        }        if(fields[i].className.match('addr')){            fields[i].onfocus=function(){                clearSafariRadios();                addClassName(this.parentNode.parentNode.parentNode,"focused",true)            };            fields[i].onblur=function(){                removeClassName(this.parentNode.parentNode.parentNode,"focused")            };        }else{            fields[i].onfocus=function(){                clearSafariRadios();                addClassName(this.parentNode.parentNode,"focused",true)            };            fields[i].onblur=function(){                removeClassName(this.parentNode.parentNode,"focused")            };        }        if(fields[i].className.match('name')){            fields[i].onchange=function(){                var code = RemoveTextVN(this.value);                fcode=getElementsByClassName(document,"*","code");                for(j=0;j<fcode.length;j++){                    fcode[j].value = code.toLowerCase();                }            }        }        if(fields[i].className.match('rcode')){            fields[i].onchange=function(){                validateRCode(this.value);            }        }    }}function initAutoResize(){}function clearSafariRadios(){    for(var i=0;i<highlight_array.length;i++){        if(highlight_array[i].parentNode){            removeClassName(highlight_array[i].parentNode.parentNode,'focused');        }    }}function ifInstructs(){    var container=document.getElementById('public');    if(container){        removeClassName(container,'noI');        var instructs=getElementsByClassName(document,"*","instruct");        if((container.offsetWidth<=450)||(instructs=='')){            addClassName(container,'noI',true);        }    }}function browserDetect(){    var detect=navigator.userAgent.toLowerCase();    var container=document.getElementsByTagName('html');    if(detect.indexOf('safari')+1){        addClassName(container[0],'safari',true);    }    if(detect.indexOf('firefox')+1){        addClassName(container[0],'firefox',true);    }}function listDetect(){//    fields=getElementsByClassName(document,"*","k-table");//    if(fields.length==1){//        var obj = fields[0].getElementsByTagName('tr');//        for(var i=1;i<obj.length;i++){//            var checkbox = obj[i].getElementsByTagName('input')[0];//            addEvent(checkbox,'click', function(){//                if(this.parentNode.parentNode.className == '' || this.parentNode.parentNode.className == 'hover'){//                    addClassName(this.parentNode.parentNode,'selected',true);//                }else{//                    removeClassName(this.parentNode.parentNode,'selected');//                }//            });//        }//    }}function checkmenu(){    if(location.href.indexOf('admin.aspx?modul')>0)        var modul = GetPostVariable('modul','home');    if(modul!='home'){        var field=null;        fields=getElementsByClassName(document,"*","k-menu");        for(var i=0;i<fields.length;i++){            var li = fields[i].getElementsByTagName('li');            for(var j=0;j<li.length;j++){                if(li[j].innerHTML.indexOf('?modul='+modul+'&')>0)                    addClassName(li[j],'selected',true);            }        };    }}function checkMail(email){    var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;    if(filter.test(email))        return true;    else         return false;}function checkNumber(number){    var checkOK = "0123456789";    var allValid = true;     var i = 0;    for(i = 0;  i < number.length;  i++){        ch = number.charAt(i);        for (j=0; j<checkOK.length; j++)             if (ch == checkOK.charAt(j))                break;        if (j == checkOK.length){            allValid = false;            break;        }    }    return allValid;}function checkFloat(val){    if(!val || (typeof val != "string" || val.constructor != String)) {        return(false);    }    var isNumber = !isNaN(new Number(val));    if(isNumber) {        if(val.indexOf('.') != -1) {            return(true);        } else {            return(false);        }    } else {        return(false);    }}function checksubmit(){    var ok = true;    var field=null;    fields=getElementsByClassName(document,"*","field");    for(i=0;i<fields.length;i++){        removeClassName(fields[i].parentNode.parentNode,"error");    };    fields=getElementsByClassName(document,"*","requi");    for(i=0;i<fields.length;i++){        if(fields[i].value==''){            clearSafariRadios();            addClassName(fields[i].parentNode.parentNode,"error",true);            ok = false;            if(field==null)                field=fields[i];        }    };    fields=getElementsByClassName(document,"*","email");    for(i=0;i<fields.length;i++){        if(!checkMail(fields[i].value)){            clearSafariRadios();            addClassName(fields[i].parentNode.parentNode,"error",true);            ok = false;            if(field==null)                field=fields[i];        }    };    fields=getElementsByClassName(document,"*","number");    for(i=0;i<fields.length;i++){        if(!checkNumber(fields[i].value)){            clearSafariRadios();            addClassName(fields[i].parentNode.parentNode,"error",true);            ok = false;            if(field==null)                field=fields[i];        }    };    fields=getElementsByClassName(document,"*","float");    for(i=0;i<fields.length;i++){        if(!checkFloat(fields[i].value)){            clearSafariRadios();            addClassName(fields[i].parentNode.parentNode,"error",true);            ok = false;            if(field==null)                field=fields[i];        }    };    if(!(field==null))        field.focus();    return ok;}function validateRCode(value){    var module=GetPostVariable('modul', 'home');    var id=GetPostVariable('id', '0');    AjaxRequest.get(    {        'parameters': {'modul': module, 'value': value, 'v': kverify, 'i': id},        'anotherParameter':'false',        'timeout':5000,        'url': kvirtualroot + '_a.aspx',        'onSuccess': function(req){            if(req.responseText != ''){                var n = eval(req.responseText).n;                if(n>0){                    fields=getElementsByClassName(document,"*","rcode");                    for(var i=0;i<fields.length;i++)                        addClassName(fields[i].parentNode.parentNode,"error",true);                }else{                    fields=getElementsByClassName(document,"*","rcode");                    for(var i=0;i<fields.length;i++)                        removeClassName(fields[i].parentNode.parentNode,"error");                }            }        }    });}function validateRange(ColumnId,RangeType){    if(document.getElementById('rangeUsedMsg'+ColumnId)){        var field=document.getElementById('Field'+ColumnId);        var msg=document.getElementById('rangeUsedMsg'+ColumnId);        switch(RangeType){            case'character':msg.innerHTML=field.value.length;break;            case'word':                var words=field.value.split(" ");                var used=0;                for(i=0;i<words.length;i++){                    if(words[i].replace(/\s+$/,"")!="")used++;                }                msg.innerHTML=used;                break;            case'digit':msg.innerHTML=field.value.length;break;        }    }}function getElementsByClassName(oElm,strTagName,strClassName){    var arrElements=(strTagName=="*"&&oElm.all)?oElm.all:oElm.getElementsByTagName(strTagName);    var arrReturnElements=new Array();    strClassName=strClassName.replace(/\-/g,"\\-");    var oRegExp=new RegExp("(^|\\s)"+strClassName+"(\\s|$)");    var oElement;    for(var i=0;i<arrElements.length;i++){        oElement=arrElements[i];        if(oRegExp.test(oElement.className)){            arrReturnElements.push(oElement);        }    }    return(arrReturnElements)}function addClassName(objElement,strClass,blnMayAlreadyExist){    if(objElement.className){        var arrList=objElement.className.split(' ');        if(blnMayAlreadyExist){            var strClassUpper=strClass.toUpperCase();            for(var i=0;i<arrList.length;i++){                if(arrList[i].toUpperCase()==strClassUpper){                    arrList.splice(i,1);i--;                }            }        }        arrList[arrList.length]=strClass;objElement.className=arrList.join(' ');    }else{        objElement.className=strClass;    }}function removeClassName(objElement,strClass){    if(objElement.className){        var arrList=objElement.className.split(' ');        var strClassUpper=strClass.toUpperCase();        for(var i=0;i<arrList.length;i++){            if(arrList[i].toUpperCase()==strClassUpper){                arrList.splice(i,1);i--;            }        }        objElement.className=arrList.join(' ');    }}function addEvent(obj,type,fn){    if(obj.attachEvent){        obj["e"+type+fn]=fn;obj[type+fn]=function(){            obj["e"+type+fn](window.event)        };        obj.attachEvent("on"+type,obj[type+fn]);    }else{        obj.addEventListener(type,fn,false);    }}function ChooseAll(aspnetForm){    if(aspnetForm.kChooseAll.checked == true){        for(var i=0;i<aspnetForm.elements.length;i++){            if((aspnetForm.elements[i].type == "checkbox") && (aspnetForm.elements[i].value == "vnk")){                aspnetForm.elements[i].checked= true;            }        }    }else{        for(i=0;i<aspnetForm.elements.length;i++){            if((aspnetForm.elements[i].type == "checkbox") && (aspnetForm.elements[i].value == "vnk")){                aspnetForm.elements[i].checked= false;            }        }    }}function checkSelect(aspnetForm,name,num,all){    var removeList='';    var alllist='';    var check = false;    fields=getElementsByClassName(document,"*",name);    for(i=0;i<fields.length;i++){        for(var j=0;j<fields[i].options.length;j++){            alllist+=',' + fields[i].options[j].value;            if(fields[i].options[j].selected){                check = true;                removeList+=',' + fields[i].options[j].value;            }        }    };    if((!check) && (!all)){        alert('Bạn phải chọn ít nhất một bản ghi cần chuyển.');        return false;    }    if(all)        removeList = alllist;    if (removeList=='')        return false;    removeList=removeList.substring(1);    aspnetForm.kevent.value = num;    aspnetForm.klist.value = removeList;    return aspnetForm.submit();}function checkDelete(aspnetForm){    var removeList='';    var check = false;    for(var i=0;i<aspnetForm.elements.length;i++){        if(aspnetForm.elements[i].type == "checkbox"){            if(aspnetForm.elements[i].checked){                if(aspnetForm.elements[i].value == "vnk"){                    check = true;                }                if (aspnetForm.elements[i].name.substr(0,8)=='kChoose_'){                    removeList+=',' + aspnetForm.elements[i].name.substring(8);                }            }        }    }    if(!check){        alert('Bạn phải chọn ít nhất một bản ghi cần xóa.');        return false;    }    if (removeList=='')        return false;    removeList=removeList.substring(1);    if(confirm('Bạn có đồng ý xoá?')){        aspnetForm.kevent.value = '1';        aspnetForm.klist.value = removeList;        return aspnetForm.submit();    }else         return false;}function checkDeleteView(aspnetForm){    if(confirm('Bạn có đồng ý xoá?')){        aspnetForm.kevent.value = '1';        return aspnetForm.submit();    }}function checkDeleteLine(aspnetForm,thisid){    if(confirm('Bạn có đồng ý xoá?')){        aspnetForm.kevent.value = '1';        aspnetForm.klist.value = thisid;        return aspnetForm.submit();    }else        return false;}function checkAll(aspnetForm,setvalue){    var removeList='';    for(var i=0;i<aspnetForm.elements.length;i++){        if(aspnetForm.elements[i].type == "checkbox"){            if (aspnetForm.elements[i].name.substr(0,8)=='kChoose_'){                removeList+=',' + aspnetForm.elements[i].name.substring(8);            }        }    }    if (removeList=='')return false;    removeList=removeList.substring(1);    aspnetForm.kevent.value = setvalue;aspnetForm.klist.value = removeList;    return aspnetForm.submit();}function checkMsg(aspnetForm,setvalue,Msg){    var removeList='';    var check = false;    for(var i=0;i<aspnetForm.elements.length;i++){        if(aspnetForm.elements[i].type == "checkbox"){            if(aspnetForm.elements[i].checked){                if(aspnetForm.elements[i].value == "vnk"){                    check = true;                }                if (aspnetForm.elements[i].name.substr(0,8)=='kChoose_'){                    removeList+=',' + aspnetForm.elements[i].name.substring(8);                }            }        }    }    if(!check){        alert('Bạn phải chọn ít nhất một bản ghi.');        return false;    }    if (removeList=='')return false;    removeList=removeList.substring(1);    if(confirm(Msg)){        aspnetForm.kevent.value = setvalue;aspnetForm.klist.value = removeList;        return aspnetForm.submit();    }else return false;}function checkPermissionList(aspnetForm){    var removeList='';    for(var i=0;i<aspnetForm.elements.length;i++){        if(aspnetForm.elements[i].type == "checkbox"){            if (aspnetForm.elements[i].name.substr(0,5)=='func_' && aspnetForm.elements[i].checked){                removeList+=',' + aspnetForm.elements[i].name.substring(5);            }        }    }    if (removeList=='')return false;    removeList=removeList.substring(1);    aspnetForm.kevent.value = '1';    aspnetForm.klist.value = removeList;    return aspnetForm.submit();}function checkPermissionModul(aspnetForm, checkbox){    if(checkbox.checked == true){        for(var i=0;i<aspnetForm.elements.length;i++){            if((aspnetForm.elements[i].type == "checkbox") && (aspnetForm.elements[i].value == checkbox.id)){                aspnetForm.elements[i].checked= true;            }        }    }else{        for(var i=0;i<aspnetForm.elements.length;i++){            if((aspnetForm.elements[i].type == "checkbox") && (aspnetForm.elements[i].value == checkbox.id)){                aspnetForm.elements[i].checked= false;            }        }    }}function checkPermissonFunc(aspnetForm, checkbox){    if(checkbox.checked == true){        var ok = true;        for(var i=0;i<aspnetForm.elements.length;i++){            if((aspnetForm.elements[i].type == "checkbox") && (aspnetForm.elements[i].value == checkbox.value)){                if(aspnetForm.elements[i].checked == false)ok = false;            }        }        if(ok) document.getElementById(checkbox.value).checked = true;    }else{        document.getElementById(checkbox.value).checked = false;    }}function checkPermissionPage(strFunc){    for(var i=0;i<kdPer.length;i++){        if(strFunc==kdPer[i]){            return true;        }    }    return false;}function GetPostAttributes(obj, vName){    var str = obj.innerHTML;    var pos = str.indexOf(vName + '="');    if(pos>0){        str=str.substring(pos + vName.length + 2);        str = str.substring(0,pos);        return str;    }}function GetPostVariable(vName, vDef){    var str=location.href;    var pos=str.indexOf('?'.concat(vName).concat('='));    if (pos==-1){        pos=str.indexOf('&'.concat(vName).concat('='));        if (pos==-1) return vDef;    }    str=str.substring(pos + vName.length + 2);    pos=str.indexOf('&');    if (pos==-1){        pos=str.length;    }    if (pos > 0){        str=str.substring(0, pos);    }    return str;}function AddNew(modul){    var lg=GetPostVariable('lg', 'vn');    location.href = '?modul=' + modul + '&ctr=edit&lg=' + lg;    return false;}function AddNewC(modul, cid) {    var lg = GetPostVariable('lg', 'vn');    location.href = '?modul=' + modul + '&ctr=edit&lg=' + lg + '&c=' + cid;    return false;}function ViewRecycleBin(modul,lg){    var rec = GetPostVariable('rec', 'vn');    location.href = '?modul=' + modul + '&ctr=list&lg=' + lg + '&rec=1';    return false;}function Reset(aspnetForm){    aspnetForm.reset();    return false;}function Back(){    history.go(-1);    return false;}function RemoveTextVN(input){    input = input.replace(/\s|\?|\/|\"|\'|\\|,|&/ig, '-');    input = input.replace(/á|à|ạ|ả|ã|ă|ắ|ằ|ặ|ẳ|ẵ|â|ấ|ầ|ậ|ẩ|ẫ/ig, "a");    input = input.replace(/đ/ig, "d");    input = input.replace(/ó|ò|ọ|ỏ|õ|ơ|ớ|ờ|ợ|ở|ỡ|ô|ố|ồ|ộ|ổ|ỗ/ig, "o");    input = input.replace(/ú|ù|ụ|ủ|ũ|ư|ứ|ừ|ự|ử|ữ/ig, "u");    input = input.replace(/é|è|ẹ|ẻ|ẽ|ê|ế|ề|ệ|ể|ễ/ig, "e");    input = input.replace(/í|ì|ị|ỉ|ĩ/ig, "i");    input = input.replace(/ý|ỳ|ỵ|ỷ|ỹ/ig, "y");    input = input.replace(/-+/ig, "-");    input = input.replace(/--/ig, "-");    if(input.lastIndexOf('-') == input.length-1)        input = input.substring(0,input.length-1);    if(input.indexOf('-') == 0)        input = input.substring(1,input.length);    return input;}function LoadBoxTemplate(title,strContent){    var HTML = '';    HTML += '<div class="k-panel">';    HTML += '    <div class="k-panel-tl">';    HTML += '        <div class="k-panel-tr">';    HTML += '            <div class="k-panel-tc">';    HTML += '                <div class="k-panel-header k-panel-icon k-icon-grid">';    HTML += '                    <span class="k-panel-header-text">'+title+'</span>';    HTML += '                </div>';    HTML += '            </div>';    HTML += '        </div>';    HTML += '    </div>';    HTML += '    <div class="k-panel-bwrap">';    HTML += '        <div class="k-panel-ml">';    HTML += '            <div class="k-panel-mr">';    HTML += '                <div class="k-panel-mc">';    HTML += strContent;    HTML += '                </div>';    HTML += '            </div>';    HTML += '        </div>';    HTML += '    </div>';    HTML += '    <div class="k-panel-bl">';    HTML += '        <div class="k-panel-br">';    HTML += '            <div class="k-panel-bc">';    HTML += '            </div>';    HTML += '        </div>';    HTML += '    </div>';    HTML += '</div>';    HTML += '<div style="height: 5px">';    HTML += '</div>';    return HTML;}function CreatePlan(aspnetForm,setvalue,Msg){    var removeList='0';    var removeList2='';    var check = false;    for(var i=0;i<aspnetForm.elements.length;i++){        if(aspnetForm.elements[i].type == "checkbox"){            if(aspnetForm.elements[i].checked){                if(aspnetForm.elements[i].value == "vnk"){                    check = true;                }                if (aspnetForm.elements[i].name.substr(0,8)=='kChoose_'){                    var fields=getElementsByClassName(document,"*","kclass"+aspnetForm.elements[i].name.substring(8));                    for(var ii=0;ii<fields.length;ii++){                        if(checkNumber(fields[ii].value)){                            if(fields[ii].checked)                                removeList2+=',' + aspnetForm.elements[i].name.substring(8) + ';' + fields[ii].value;                        }                    };                }            }        }    }    if(!check){        alert('Bạn phải chọn ít nhất một bản ghi.');        return false;    }    if (removeList2=='')return false;    removeList2=removeList2.substring(1);    if(confirm(Msg)){        aspnetForm.kevent.value = setvalue;aspnetForm.klist.value = removeList;        aspnetForm.klist2.value = removeList2;        return aspnetForm.submit();    }else return false;}function GetParentList(aspnetForm) {    var removeList = '';    var check = false;    for (var i = 0; i < aspnetForm.elements.length; i++) {        if (aspnetForm.elements[i].type == "checkbox") {            if (aspnetForm.elements[i].checked) {                if (aspnetForm.elements[i].value == "vnk") {                    check = true;                }                if (aspnetForm.elements[i].name.substr(0, 8) == 'kChoose_') {                    removeList += ',' + aspnetForm.elements[i].name.substring(8);                }            }        }    }    if (!check) {        alert('Bạn phải chọn ít nhất một bản ghi.');        return false;    }    if (removeList == '') return false;    removeList = removeList.substring(1);    return removeList;}function GetParentList1(aspnetForm) {    var removeList = '';    var check = false;    for (var i = 0; i < aspnetForm.elements.length; i++) {        if (aspnetForm.elements[i].type == "checkbox") {            if (aspnetForm.elements[i].checked) {                if (aspnetForm.elements[i].value == "vnk1") {                    check = true;                }                if (aspnetForm.elements[i].name.substr(0, 8) == 'kChoose_') {                    removeList += ',' + aspnetForm.elements[i].name.substring(8);                }            }        }    }    if (!check) {        alert('Bạn phải chọn ít nhất một bản ghi.');        return false;    }    if (removeList == '') return false;    removeList = removeList.substring(1);    return removeList;}